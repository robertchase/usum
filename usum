if [ $# = 0 ]; then
  echo "`basename $0` col<:len.dec>...col <FS=char> <OFS=char> <filename>"
  exit
fi
while [ $# != 0 ]
do
  if [ 1 = `echo $1 | awk '$1~/^[0-9]*$/        {print 1;next}
                           $1~/^[0-9]*:[0-9.]*$/{print 1;next}
                                                {print 0}'` ]; then
    [ -z "$cols" ] && cols=$1 || cols="$cols;$1"
  else
    args="$args $1"
  fi
  shift
done
awk -v cols=$cols 'BEGIN {
             cnt = split (cols, col, ";")
             for (i = 1; i <= cnt; i++)
               {
                 floatcnt = split (col [i], float, ":")
                 if (floatcnt == 2)
                   {
                     mask [i] = sprintf ("%%%sf%%s", float [2])
                     col [i] = float [1]
                   }
                 else
                   mask [i] = "%d%s"
                 sum [col [i]] = 1
               }
             unique = 1
           }
  {
    key = ""
    for (i = 1; i < NF; i++)
      if (sum [i] != 1)
        {
          if (numeric [$i] == 0)
            {
              numeric [$i] = unique
              alpha [unique ++] = $i
            }
          if (key == "")
            key = numeric [$i]
          else key = key "." numeric [$i]
        }
    for (s in sum)
      t [key "." s] += $s
    k [key] = 1
  }
END {
      for (key in k)
        {
          acnt = split (key, a, ".")
          for (i = 1; i <= acnt; i++)
            printf "%s%s", alpha [a [i]], OFS
          for (i = 1; i <= cnt; i++)
             printf mask [i], t [key "." col [i]], OFS
          printf "\n"
        }
    }' $args
